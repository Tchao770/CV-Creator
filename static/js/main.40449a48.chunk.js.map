{"version":3,"sources":["components/General.js","components/Educational.js","components/Practical.js","components/Skills.js","App.js","reportWebVitals.js","index.js"],"names":["GeneralInfo","state","fullName","email","number","editMode","temp","handleChange","bind","handleSave","toggleEdit","renderDisplay","renderEdit","handleCancel","Object","assign","this","setState","event","target","name","value","preventDefault","indexOf","alert","className","onClick","id","size","classname","props","onSubmit","style","textAlign","type","placeholder","onChange","Provider","Component","EducationalInfo","schoolName","major","gradDate","school","date","PracticalInfo","companyName","position","timeBegin","timeEnd","task","removeButton","company","timeB","timeE","handleRemove","itemId","taskArr","split","map","rows","cols","SkillInfo","skill","level","rating","i","push","App","practicalArr","skillsArr","appendPractical","tempArr","key","window","Date","getTime","val","index","splice","General","width","Educational","practical","Practical","Skills","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAyGeA,E,kDApGX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,SAAU,GACVC,MAAO,GACPC,OAAQ,GACRC,UAAU,GAEd,EAAKC,KAAO,CACRJ,SAAU,GACVC,MAAO,GACPC,OAAQ,IAEZ,EAAKG,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBAlBV,E,yDAsBVM,OAAOC,OAAOC,KAAKV,KAAMU,KAAKf,OAC9Be,KAAKC,SAAS,CACVZ,UAAU,M,mCAILa,GAAQ,IAAD,EACQA,EAAMC,OAAtBC,EADQ,EACRA,KAAMC,EADE,EACFA,MACdL,KAAKC,SAAL,eACKG,EAAOC,M,iCAILH,GACPA,EAAMI,iBADQ,IAOT,EAPS,cAEgBJ,EAAMC,OAFtB,GAEPC,EAFO,KAEDjB,EAFC,KAEMC,EAFN,KAGE,CAACgB,EAAKC,MAAOlB,EAAMkB,MAAOjB,EAAOiB,OACrCE,QAAQ,KAAO,EACvBC,MAAM,iDAGNR,KAAKC,UAAL,mBACKC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,OADtC,0BAEc,GAFd,M,mCAOKH,GAAQ,IAAD,EACoBF,KAAKV,KAAjCJ,EADQ,EACRA,SAAUC,EADF,EACEA,MAAOC,EADT,EACSA,OACzBY,KAAKC,SAAS,CACVf,SAAUA,EACVC,MAAOA,EACPC,OAAQA,EACRC,UAAU,M,sCAID,IAAD,EACwBW,KAAKf,MAAjCC,EADI,EACJA,SAAUC,EADN,EACMA,MAAOC,EADb,EACaA,OACzB,OACI,sBAAKqB,UAAU,aAAaC,QAASV,KAAKN,WAA1C,UACI,oBAAIiB,GAAG,WAAP,SAAmBzB,IACnB,oBAAGyB,GAAG,QAAN,UAAc,cAAC,IAAD,CAASN,MAAO,CAAEO,KAAM,WAAtC,IAAqDzB,KACrD,oBAAGwB,GAAG,QAAN,UAAc,cAAC,IAAD,IAAd,IAA2BvB,U,mCAMzB,IACFyB,EAAcb,KAAKc,MAAnBD,UADC,EAE2Bb,KAAKf,MAAjCC,EAFC,EAEDA,SAAUC,EAFT,EAESA,MAAOC,EAFhB,EAEgBA,OACzB,OACI,uBAAMqB,UAAWI,EAAWE,SAAUf,KAAKP,WAA3C,UACI,oBAAIuB,MAAO,CAAEC,UAAW,QAAxB,qBACA,8CAAwB,uBACxB,uBAAOb,KAAK,WAAWc,KAAK,OAAOC,YAAY,YAC3Cd,MAAOnB,EAAUkC,SAAUpB,KAAKT,eAAgB,uBACpD,2CAAqB,uBACrB,uBAAOa,KAAK,QAAQc,KAAK,QAAQC,YAAY,SACzCd,MAAOlB,EAAOiC,SAAUpB,KAAKT,eAAgB,uBACjD,iDAA2B,uBAC3B,uBAAOa,KAAK,SAASe,YAAY,gBAC7Bd,MAAOjB,EAAQgC,SAAUpB,KAAKT,eAAgB,uBAClD,eAAC,IAAY8B,SAAb,CAAsBhB,MAAO,CAAEO,KAAM,OAArC,UACI,wBAAQM,KAAK,SAAb,SAAsB,cAAC,IAAD,CAAQT,UAAU,cACxC,iCAAQ,cAAC,IAAD,CAASA,UAAU,UAAUC,QAASV,KAAKH,yB,+BAO/D,OAAQG,KAAKf,MAAMI,SAAYW,KAAKJ,aAAeI,KAAKL,oB,GAjGtC2B,aCsGXC,E,kDArGX,aAAe,IAAD,8BACV,gBACKtC,MAAQ,CACTuC,WAAY,GACZC,MAAO,GACPC,SAAU,GACVrC,UAAU,GAEd,EAAKC,KAAO,CACRkC,WAAY,GACZC,MAAO,GACPC,SAAU,IAEd,EAAKnC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBAlBV,E,yDAsBVM,OAAOC,OAAOC,KAAKV,KAAMU,KAAKf,OAC9Be,KAAKC,SAAS,CACVZ,UAAU,M,mCAILa,GAAQ,IAAD,EACQA,EAAMC,OAAtBC,EADQ,EACRA,KAAMC,EADE,EACFA,MACdL,KAAKC,SAAL,eACKG,EAAOC,M,iCAILH,GACPA,EAAMI,iBADQ,IAOT,EAPS,cAEgBJ,EAAMC,OAFtB,GAEPwB,EAFO,KAECF,EAFD,KAEQG,EAFR,KAGE,CAACD,EAAOtB,MAAOoB,EAAMpB,MAAOuB,EAAKvB,OACrCE,QAAQ,KAAO,EACvBC,MAAM,qDAGNR,KAAKC,UAAL,mBACKC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,OADtC,0BAEc,GAFd,M,mCAOKH,GAAQ,IAAD,EACwBF,KAAKV,KAArCkC,EADQ,EACRA,WAAYC,EADJ,EACIA,MAAOC,EADX,EACWA,SAC3B1B,KAAKC,SAAS,CACVuB,WAAYA,EACZC,MAAOA,EACPC,SAAUA,EACVrC,UAAU,M,sCAID,IAAD,EAC4BW,KAAKf,MAArCuC,EADI,EACJA,WAAYC,EADR,EACQA,MAAOC,EADf,EACeA,SAC3B,OACI,sBAAKjB,UAAU,aAAaC,QAASV,KAAKN,WAA1C,UACI,6BAAK+B,IACL,4BAAID,IACJ,6CAAgBE,U,mCAKd,IACFb,EAAcb,KAAKc,MAAnBD,UADC,EAE+Bb,KAAKf,MAArCuC,EAFC,EAEDA,WAAYC,EAFX,EAEWA,MAAOC,EAFlB,EAEkBA,SAC3B,OACI,uBAAMjB,UAAWI,EAAWE,SAAUf,KAAKP,WAA3C,UACI,gDAA0B,uBAC1B,uBAAOW,KAAK,aAAae,YAAY,aACjCd,MAAOmB,EAAYJ,SAAUpB,KAAKT,eAAgB,uBACtD,0CAAoB,uBACpB,uBAAOa,KAAK,QAAQe,YAAY,eAC5Bd,MAAOoB,EAAOL,SAAUpB,KAAKT,eAAgB,uBACjD,oDAA8B,uBAC9B,uBAAOa,KAAK,WAAWe,YAAY,+BAC/Bd,MAAOqB,EAAUN,SAAUpB,KAAKT,eAAgB,uBACpD,eAAC,IAAY8B,SAAb,CAAsBhB,MAAO,CAAEO,KAAM,OAArC,UACI,wBAAQM,KAAK,SAAb,SAAsB,cAAC,IAAD,CAAQT,UAAU,cACxC,iCAAQ,cAAC,IAAD,CAASA,UAAU,UAAUC,QAASV,KAAKH,yB,+BAO/D,OAAIG,KAAKf,MAAMI,SACJW,KAAKJ,aAELI,KAAKL,oB,GAlGM2B,a,ICuIfO,E,kDA9HX,aAAe,IAAD,8BACV,gBACK5C,MAAQ,CACT6C,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,KAAM,GACN7C,UAAU,GAEd,EAAKC,KAAO,CACRwC,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,QAAS,IAEb,EAAK1C,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBAtBV,E,yDA0BVM,OAAOC,OAAOC,KAAKV,KAAMU,KAAKf,OAC9Be,KAAKC,SAAS,CACVZ,UAAU,M,mCAILa,GAAQ,IAAD,EACQA,EAAMC,OAAtBC,EADQ,EACRA,KAAMC,EADE,EACFA,MACdL,KAAKC,SAAL,eACKG,EAAOC,M,iCAILH,GACPA,EAAMI,iBADQ,IAOT,EAPS,cAE4BJ,EAAMC,OAFlC,GAEPiC,EAFO,KAEEL,EAFF,KAEYM,EAFZ,KAEmBC,EAFnB,KAGE,CAACF,EAAQ/B,MAAO0B,EAAS1B,MAAOgC,EAAMhC,MAAOiC,EAAMjC,OACvDE,QAAQ,KAAO,EACvBC,MAAM,8DAGNR,KAAKC,UAAL,mBACKC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,OADtC,0BAEc,GAFd,M,mCAOKH,GAAQ,IAAD,EACsCF,KAAKV,KAAnDwC,EADQ,EACRA,YAAaC,EADL,EACKA,SAAUC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,QAC1CjC,KAAKC,SAAS,CACV6B,YAAaA,EACbC,SAAUA,EACVC,UAAWA,EACXC,QAASA,EACT5C,UAAU,M,qCAKdW,KAAKc,MAAMyB,aAAavC,KAAKc,MAAM0B,U,sCAKtB,IAAD,EACgDxC,KAAKf,MAAzD6C,EADI,EACJA,YAAaC,EADT,EACSA,SAAUC,EADnB,EACmBA,UAAWC,EAD9B,EAC8BA,QACpCQ,EAFM,EACuCP,KAC9BQ,MAAM,SAE3B,OACI,sBAAKjC,UAAU,aAAaC,QAASV,KAAKN,WAA1C,UACI,6BAAKqC,IACL,8BAAID,EAAJ,KAAmBE,EAAnB,MAAiCC,KACjC,6BAEQQ,EAAQE,KAAI,SAAAT,GACR,OAAO,6BAAKA,c,mCAQtB,IACFrB,EAAcb,KAAKc,MAAnBD,UADC,EAEmDb,KAAKf,MAAzD6C,EAFC,EAEDA,YAAaC,EAFZ,EAEYA,SAAUC,EAFtB,EAEsBA,UAAWC,EAFjC,EAEiCA,QAASC,EAF1C,EAE0CA,KACnD,OACI,uBAAMzB,UAAWI,EAAWE,SAAUf,KAAKP,WAA3C,UACI,iDAA2B,uBAC3B,uBAAOW,KAAK,cAAce,YAAY,kBAClCd,MAAOyB,EAAaV,SAAUpB,KAAKT,eAAgB,uBACvD,6CAAuB,uBACvB,uBAAOa,KAAK,WAAWe,YAAY,4BAC/Bd,MAAO0B,EAAUX,SAAUpB,KAAKT,eAAgB,uBACpD,8DAAwC,uBACxC,uBAAOa,KAAK,YAAYe,YAAY,UAChCd,MAAO2B,EAAWZ,SAAUpB,KAAKT,eAAgB,uBACrD,6DAAuC,uBACvC,uBAAOa,KAAK,UAAUe,YAAY,qBAC9Bd,MAAO4B,EAASb,SAAUpB,KAAKT,eAAgB,uBACnD,mDAA6B,uBAC7B,0BAAUa,KAAK,OAAOe,YAAY,2BAA2Bd,MAAO6B,EAAMU,KAAK,IAAIC,KAAK,KAAKzB,SAAUpB,KAAKT,eAAgB,uBAC5H,eAAC,IAAY8B,SAAb,CAAsBhB,MAAO,CAAEO,KAAM,OAArC,UACI,wBAAQM,KAAK,SAAb,SAAsB,cAAC,IAAD,CAAQT,UAAU,cACxC,iCAAQ,cAAC,IAAD,CAASA,UAAU,UAAUC,QAASV,KAAKH,iBACnD,iCAAQ,cAAC,IAAD,CAAUY,UAAU,UAAUC,QAASV,KAAKmC,yB,+BAOhE,OAAInC,KAAKf,MAAMI,SACJW,KAAKJ,aAELI,KAAKL,oB,GA3HI2B,aCiGbwB,E,kDAxGX,aAAe,IAAD,8BACV,gBACK7D,MAAQ,CACT8D,MAAO,GACPC,MAAO,EACP3D,UAAU,GAEd,EAAKC,KAAO,CACRyD,MAAO,GACPC,MAAO,IAEX,EAAKzD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAClB,EAAKG,cAAgB,EAAKA,cAAcH,KAAnB,gBACrB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKK,aAAe,EAAKA,aAAaL,KAAlB,gBACpB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBAjBV,E,yDAqBVM,OAAOC,OAAOC,KAAKV,KAAMU,KAAKf,OAC9Be,KAAKC,SAAS,CACVZ,UAAU,M,mCAILa,GAAQ,IAAD,EACQA,EAAMC,OAAtBC,EADQ,EACRA,KAAMC,EADE,EACFA,MACdL,KAAKC,SAAL,eACKG,EAAOC,M,iCAILH,GAKD,IAAD,GAJLA,EAAMI,iBACwB,KAA1BJ,EAAMC,OAAO,GAAGE,OAChBG,MAAM,gDAGNR,KAAKC,UAAL,mBACKC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,OADtC,0BAEc,GAFd,M,mCAOKH,GAAQ,IAAD,EACSF,KAAKV,KAAtByD,EADQ,EACRA,MAAOC,EADC,EACDA,MACfhD,KAAKC,SAAS,CACV8C,MAAOA,EACPC,MAAOA,EACP3D,UAAU,M,qCAKdW,KAAKc,MAAMyB,aAAavC,KAAKc,MAAM0B,U,sCAOnC,IAJa,IAAD,EACaxC,KAAKf,MAAtB8D,EADI,EACJA,MAAOC,EADH,EACGA,MACTC,EAAS,GAENC,EAAI,EAAGA,EAAIF,EAAOE,IACvBD,EAAOE,KAAK,KAGhB,OACI,qBAAK1C,UAAU,aAAaC,QAASV,KAAKN,WAA1C,SACI,oCAAOqD,S,mCAML,IACFlC,EAAcb,KAAKc,MAAnBD,UADC,EAEgBb,KAAKf,MAAtB8D,EAFC,EAEDA,MAFC,EAEMC,MACf,OACI,uBAAMvC,UAAWI,EAAWE,SAAUf,KAAKP,WAA3C,UACI,0CAAoB,uBACpB,uBAAOW,KAAK,QAAQe,YAAY,oBAC5Bd,MAAO0C,EAAO3B,SAAUpB,KAAKT,eAAgB,uBAIjD,eAAC,IAAY8B,SAAb,CAAsBhB,MAAO,CAAEO,KAAM,OAArC,UACI,wBAAQM,KAAK,SAAb,SAAsB,cAAC,IAAD,CAAQT,UAAU,cACxC,iCAAQ,cAAC,IAAD,CAASA,UAAU,UAAUC,QAASV,KAAKH,iBACnD,iCAAQ,cAAC,IAAD,CAAUY,UAAU,UAAUC,QAASV,KAAKmC,yB,+BAOhE,OAAInC,KAAKf,MAAMI,SACJW,KAAKJ,aAELI,KAAKL,oB,GArGA2B,aCyFT8B,G,wDA7Ed,aAAe,IAAD,8BACb,gBACKnE,MAAQ,CACZoE,aAAc,GACdC,UAAW,IAEZ,EAAKC,gBAAkB,EAAKA,gBAAgB/D,KAArB,gBACvB,EAAK+C,aAAe,EAAKA,aAAa/C,KAAlB,gBAPP,E,4DAUE0B,GAEf,IAAIsC,EAAoB,cAATtC,EAAwBlB,KAAKf,MAAMoE,aAAerD,KAAKf,MAAMqE,UACxEG,EAAM,IAAIC,OAAOC,KACrBH,EAAQL,KAAKM,EAAIG,WACJ,cAAT1C,EACHlB,KAAKC,SAAS,CACboD,aAAcG,IAGE,WAATtC,GACRlB,KAAKC,SAAS,CACbqD,UAAWE,M,mCAIDK,EAAK3C,GACjB,IAAMsC,EAAoB,cAATtC,EAAwBlB,KAAKf,MAAMoE,aAAerD,KAAKf,MAAMqE,UAC1EQ,EAAQN,EAAQjD,QAAQsD,GAC5BL,EAAQO,OAAOD,EAAO,GACT,cAAT5C,EACHlB,KAAKC,SAAS,CACboD,aAAcG,IAGE,WAATtC,GACRlB,KAAKC,SAAS,CACbqD,UAAWE,M,+BAKJ,IAAD,SAC4BxD,KAAKf,MAAjCoE,EADA,EACAA,aAAcC,EADd,EACcA,UACtB,OACC,8BACC,sBAAK7C,UAAU,YAAf,UACC,qBAAKA,UAAU,eACf,cAACuD,EAAD,CAASnD,UAAU,gBACnB,oBAAIG,MAAO,CAAEiD,MAAO,SACpB,2CACA,qBAAKxD,UAAU,eACf,cAACyD,EAAD,CAAarD,UAAU,gBACvB,oBAAIG,MAAO,CAAEiD,MAAO,SACpB,uDAAyB,cAAC,IAAD,CAAcxD,UAAU,UAAUC,QAAS,kBAAM,EAAK6C,gBAAgB,mBAC/F,qBAAK9C,UAAU,eACd4C,EAAaV,KAAI,SAAAwB,GACjB,OACC,cAACC,EAAD,CAAWvD,UAAU,cAA8B2B,OAAQ2B,EAAW5B,aAAc,kBAAM,EAAKA,aAAa4B,EAAW,eAA/EA,MAI1C,oBAAInD,MAAO,CAAEiD,MAAO,SACpB,yCAAW,cAAC,IAAD,CAAcxD,UAAU,UAAUC,QAAS,kBAAM,EAAK6C,gBAAgB,gBAChFD,EAAUX,KAAI,SAAAI,GACd,OACC,cAACsB,EAAD,CAAQxD,UAAU,cAA0B2B,OAAQO,EAAOR,aAAc,kBAAM,EAAKA,aAAaQ,EAAO,YAAnEA,e,GAnE1BzB,cCHHgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40449a48.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { MdDone, MdClear, MdPhone, MdEmail } from 'react-icons/md';\r\nimport { IconContext } from 'react-icons';\r\n\r\nclass GeneralInfo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fullName: \"\",\r\n            email: \"\",\r\n            number: \"\",\r\n            editMode: true\r\n        };\r\n        this.temp = {\r\n            fullName: \"\",\r\n            email: \"\",\r\n            number: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.renderDisplay = this.renderDisplay.bind(this);\r\n        this.renderEdit = this.renderEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        Object.assign(this.temp, this.state);\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n        const [name, email, number] = event.target;\r\n        const options = [name.value, email.value, number.value]\r\n        if (options.indexOf(\"\") > -1) {\r\n            alert(\"Please fill out all fields in General Section\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n                editMode: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        const { fullName, email, number } = this.temp;\r\n        this.setState({\r\n            fullName: fullName,\r\n            email: email,\r\n            number: number,\r\n            editMode: false\r\n        });\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { fullName, email, number } = this.state;\r\n        return (\r\n            <div className=\"genDisplay\" onClick={this.toggleEdit}>\r\n                <h1 id=\"fullName\">{fullName}</h1>\r\n                <p id=\"email\"><MdEmail value={{ size: \"200em\" }} /> {email}</p>\r\n                <p id=\"phone\"><MdPhone /> {number}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    renderEdit() {\r\n        const { classname } = this.props;\r\n        const { fullName, email, number } = this.state;\r\n        return (\r\n            <form className={classname} onSubmit={this.handleSave}>\r\n                <h2 style={{ textAlign: \"left\" }}>General</h2>\r\n                <label>Full Name</label><br />\r\n                <input name=\"fullName\" type=\"text\" placeholder=\"Full Name\"\r\n                    value={fullName} onChange={this.handleChange} /><br />\r\n                <label>E-mail</label><br />\r\n                <input name=\"email\" type=\"email\" placeholder=\"E-mail\"\r\n                    value={email} onChange={this.handleChange} /><br />\r\n                <label>Phone Number</label><br />\r\n                <input name=\"number\" placeholder=\"(XXX)XXX-XXXX\"\r\n                    value={number} onChange={this.handleChange} /><br />\r\n                <IconContext.Provider value={{ size: \"2em\" }}>\r\n                    <button type=\"submit\"><MdDone className=\"buttons\" /></button>\r\n                    <button><MdClear className=\"buttons\" onClick={this.handleCancel} /></button>\r\n                </IconContext.Provider>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (this.state.editMode) ? this.renderEdit() : this.renderDisplay();\r\n    }\r\n}\r\n\r\nexport default GeneralInfo;","import React, { Component } from 'react';\r\nimport { MdDone, MdClear } from 'react-icons/md';\r\nimport { IconContext } from 'react-icons';\r\n\r\nclass EducationalInfo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            schoolName: \"\",\r\n            major: \"\",\r\n            gradDate: \"\",\r\n            editMode: true\r\n        };\r\n        this.temp = {\r\n            schoolName: \"\",\r\n            major: \"\",\r\n            gradDate: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.renderDisplay = this.renderDisplay.bind(this);\r\n        this.renderEdit = this.renderEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        Object.assign(this.temp, this.state);\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n        const [school, major, date] = event.target;\r\n        const options = [school.value, major.value, date.value]\r\n        if (options.indexOf(\"\") > -1) {\r\n            alert(\"Please fill out all fields in Educational section\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n                editMode: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        const { schoolName, major, gradDate } = this.temp;\r\n        this.setState({\r\n            schoolName: schoolName,\r\n            major: major,\r\n            gradDate: gradDate,\r\n            editMode: false\r\n        });\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { schoolName, major, gradDate } = this.state;\r\n        return (\r\n            <div className=\"eduDisplay\" onClick={this.toggleEdit}>\r\n                <h3>{major}</h3>\r\n                <p>{schoolName}</p>\r\n                <p>Graduation: {gradDate}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderEdit() {\r\n        const { classname } = this.props;\r\n        const { schoolName, major, gradDate } = this.state;\r\n        return (\r\n            <form className={classname} onSubmit={this.handleSave}>\r\n                <label>Institution</label><br />\r\n                <input name=\"schoolName\" placeholder=\"University\"\r\n                    value={schoolName} onChange={this.handleChange} /><br />\r\n                <label>Major</label><br />\r\n                <input name=\"major\" placeholder=\"BS/AA, Major\"\r\n                    value={major} onChange={this.handleChange} /><br />\r\n                <label>Graduation Date</label><br />\r\n                <input name=\"gradDate\" placeholder=\"Expected MM/YYYY, or MM/YYYY\"\r\n                    value={gradDate} onChange={this.handleChange} /><br />\r\n                <IconContext.Provider value={{ size: \"2em\" }}>\r\n                    <button type=\"submit\"><MdDone className=\"buttons\" /></button>\r\n                    <button><MdClear className=\"buttons\" onClick={this.handleCancel} /></button>\r\n                </IconContext.Provider>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.editMode)\r\n            return this.renderEdit();\r\n        else\r\n            return this.renderDisplay();\r\n    }\r\n}\r\n\r\nexport default EducationalInfo;","import React, { Component } from 'react';\r\nimport { MdDone, MdClear, MdDelete } from 'react-icons/md';\r\nimport { IconContext } from 'react-icons';\r\n\r\nfunction MdButtons(props) {\r\n    <IconContext.Provider value={{ size: \"2em\" }}>\r\n        <button type=\"submit\"><MdDone className=\"buttons\" /></button>\r\n        <button><MdClear className=\"buttons\" onClick={this.handleCancel} /></button>\r\n        <button><MdDelete className=\"buttons\" onClick={props.removeButton} /></button>\r\n    </IconContext.Provider>\r\n}\r\n\r\nclass PracticalInfo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            companyName: \"\",\r\n            position: \"\",\r\n            timeBegin: \"\",\r\n            timeEnd: \"\",\r\n            task: \"\",\r\n            editMode: true\r\n        };\r\n        this.temp = {\r\n            companyName: \"\",\r\n            position: \"\",\r\n            timeBegin: \"\",\r\n            timeEnd: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.renderDisplay = this.renderDisplay.bind(this);\r\n        this.renderEdit = this.renderEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.removeButton = this.removeButton.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        Object.assign(this.temp, this.state);\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n        const [company, position, timeB, timeE] = event.target;\r\n        const options = [company.value, position.value, timeB.value, timeE.value]\r\n        if (options.indexOf(\"\") > -1) {\r\n            alert(\"Please fill out all fields in Practical Experience section\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n                editMode: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        const { companyName, position, timeBegin, timeEnd } = this.temp;\r\n        this.setState({\r\n            companyName: companyName,\r\n            position: position,\r\n            timeBegin: timeBegin,\r\n            timeEnd: timeEnd,\r\n            editMode: false\r\n        });\r\n    }\r\n\r\n    removeButton() {\r\n        this.props.handleRemove(this.props.itemId);\r\n    }\r\n\r\n\r\n\r\n    renderDisplay() {\r\n        const { companyName, position, timeBegin, timeEnd, task } = this.state;\r\n        const taskArr = task.split(/\\r?\\n/);\r\n\r\n        return (\r\n            <div className=\"eduDisplay\" onClick={this.toggleEdit}>\r\n                <h3>{position}</h3>\r\n                <p>{companyName}, {timeBegin} - {timeEnd}</p>\r\n                <ul>\r\n                    {\r\n                        taskArr.map(task => {\r\n                            return <li>{task}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderEdit() {\r\n        const { classname } = this.props;\r\n        const { companyName, position, timeBegin, timeEnd, task } = this.state;\r\n        return (\r\n            <form className={classname} onSubmit={this.handleSave}>\r\n                <label>Company Name</label><br />\r\n                <input name=\"companyName\" placeholder=\"Name of Company\"\r\n                    value={companyName} onChange={this.handleChange} /><br />\r\n                <label>Position</label><br />\r\n                <input name=\"position\" placeholder=\"Fullstack Developer, etc.\"\r\n                    value={position} onChange={this.handleChange} /><br />\r\n                <label>First Month of Employment</label><br />\r\n                <input name=\"timeBegin\" placeholder=\"MM/YYYY\"\r\n                    value={timeBegin} onChange={this.handleChange} /><br />\r\n                <label>Last Month of Employment</label><br />\r\n                <input name=\"timeEnd\" placeholder=\"MM/YYYY or Current\"\r\n                    value={timeEnd} onChange={this.handleChange} /><br />\r\n                <label>Relevant Tasks</label><br />\r\n                <textarea name=\"task\" placeholder=\"Press enter for new task\" value={task} rows=\"5\" cols=\"33\" onChange={this.handleChange} /><br />\r\n                <IconContext.Provider value={{ size: \"2em\" }}>\r\n                    <button type=\"submit\"><MdDone className=\"buttons\" /></button>\r\n                    <button><MdClear className=\"buttons\" onClick={this.handleCancel} /></button>\r\n                    <button><MdDelete className=\"buttons\" onClick={this.removeButton} /></button>\r\n                </IconContext.Provider>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.editMode)\r\n            return this.renderEdit();\r\n        else\r\n            return this.renderDisplay();\r\n    }\r\n}\r\n\r\nexport default PracticalInfo;","import React, { Component } from 'react';\r\nimport { MdDone, MdClear, MdDelete } from 'react-icons/md';\r\nimport { IconContext } from 'react-icons';\r\n\r\nclass SkillInfo extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            skill: \"\",\r\n            level: 0,\r\n            editMode: true\r\n        };\r\n        this.temp = {\r\n            skill: \"\",\r\n            level: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSave = this.handleSave.bind(this);\r\n        this.toggleEdit = this.toggleEdit.bind(this);\r\n        this.renderDisplay = this.renderDisplay.bind(this);\r\n        this.renderEdit = this.renderEdit.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.removeButton = this.removeButton.bind(this);\r\n    }\r\n\r\n    toggleEdit() {\r\n        Object.assign(this.temp, this.state);\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const { name, value } = event.target\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSave(event) {\r\n        event.preventDefault();\r\n        if (event.target[0].value === \"\") {\r\n            alert(\"Please fill out all fields in Skills section\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                [event.target.name]: event.target.value,\r\n                editMode: false\r\n            });\r\n        }\r\n    }\r\n\r\n    handleCancel(event) {\r\n        const { skill, level } = this.temp;\r\n        this.setState({\r\n            skill: skill,\r\n            level: level,\r\n            editMode: false\r\n        });\r\n    }\r\n\r\n    removeButton() {\r\n        this.props.handleRemove(this.props.itemId);\r\n    }\r\n\r\n    renderDisplay() {\r\n        const { skill, level } = this.state;\r\n        const rating = [];\r\n\r\n        for (let i = 0; i < level; i++) {\r\n            rating.push(\"O\");\r\n        }\r\n\r\n        return (\r\n            <div className=\"eduDisplay\" onClick={this.toggleEdit}>\r\n                <h3>- {skill}</h3>\r\n                {/*<p><b></b> {rating}</p>*/}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderEdit() {\r\n        const { classname } = this.props;\r\n        const { skill, level } = this.state;\r\n        return (\r\n            <form className={classname} onSubmit={this.handleSave}>\r\n                <label>Skill</label><br />\r\n                <input name=\"skill\" placeholder=\"C++, Python, etc.\"\r\n                    value={skill} onChange={this.handleChange} /><br />\r\n                {/*<label>Level (Out of 10)</label><br />\r\n                <input type=\"number\" name=\"level\"\r\n                value={level} onChange={this.handleChange} /><br />*/}\r\n                <IconContext.Provider value={{ size: \"2em\" }}>\r\n                    <button type=\"submit\"><MdDone className=\"buttons\" /></button>\r\n                    <button><MdClear className=\"buttons\" onClick={this.handleCancel} /></button>\r\n                    <button><MdDelete className=\"buttons\" onClick={this.removeButton} /></button>\r\n                </IconContext.Provider>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.editMode)\r\n            return this.renderEdit();\r\n        else\r\n            return this.renderDisplay();\r\n    }\r\n}\r\n\r\nexport default SkillInfo;","import General from \"./components/General.js\"\nimport Educational from \"./components/Educational.js\"\nimport Practical from \"./components/Practical.js\"\nimport Skills from \"./components/Skills.js\"\nimport React, { Component } from 'react';\nimport { MdLibraryAdd } from 'react-icons/md';\n\nimport './styles/App.css';\n/*\nTODO:\n\tRearrange components to look more like a CV\n\tImprove the styling\n\tInclude links and icons\n*/\n// Responsible for rendering input form\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tpracticalArr: [],\n\t\t\tskillsArr: []\n\t\t}\n\t\tthis.appendPractical = this.appendPractical.bind(this);\n\t\tthis.handleRemove = this.handleRemove.bind(this);\n\t}\n\n\tappendPractical(type) {\n\t\t//    practicalArr.push((<Practical classname=\"sectionCard\" />))\n\t\tlet tempArr = (type === \"practical\") ? this.state.practicalArr : this.state.skillsArr;\n\t\tlet key = new window.Date();\n\t\ttempArr.push(key.getTime());\n\t\tif (type === \"practical\") {\n\t\t\tthis.setState({\n\t\t\t\tpracticalArr: tempArr\n\t\t\t});\n\t\t}\n\t\telse if (type === \"skills\") {\n\t\t\tthis.setState({\n\t\t\t\tskillsArr: tempArr\n\t\t\t});\n\t\t}\n\t}\n\thandleRemove(val, type) {\n\t\tconst tempArr = (type === \"practical\") ? this.state.practicalArr : this.state.skillsArr;\n\t\tlet index = tempArr.indexOf(val);\n\t\ttempArr.splice(index, 1);\n\t\tif (type === \"practical\") {\n\t\t\tthis.setState({\n\t\t\t\tpracticalArr: tempArr\n\t\t\t});\n\t\t}\n\t\telse if (type === \"skills\") {\n\t\t\tthis.setState({\n\t\t\t\tskillsArr: tempArr\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { practicalArr, skillsArr } = this.state;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"sideButton\"></div>\n\t\t\t\t\t<General classname=\"sectionCard\" />\n\t\t\t\t\t<hr style={{ width: \"75%\" }} />\n\t\t\t\t\t<h2>Education</h2>\n\t\t\t\t\t<div className=\"sideButton\"></div>\n\t\t\t\t\t<Educational classname=\"sectionCard\" />\n\t\t\t\t\t<hr style={{ width: \"75%\" }} />\n\t\t\t\t\t<h2>Practical Experience <MdLibraryAdd className=\"buttons\" onClick={() => this.appendPractical(\"practical\")} /></h2>\n\t\t\t\t\t<div className=\"sideButton\"></div>\n\t\t\t\t\t{practicalArr.map(practical => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Practical classname=\"sectionCard\" key={practical} itemId={practical} handleRemove={() => this.handleRemove(practical, \"practical\")} />\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<hr style={{ width: \"75%\" }} />\n\t\t\t\t\t<h2>Skills <MdLibraryAdd className=\"buttons\" onClick={() => this.appendPractical(\"skills\")} /></h2>\n\t\t\t\t\t{skillsArr.map(skill => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Skills classname=\"sectionCard\" key={skill} itemId={skill} handleRemove={() => this.handleRemove(skill, \"skills\")} />\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}